export type Question = {
  id: string
  category: "HTML" | "CSS" | "JavaScript" | "React" | "Vue" | "ReactStateManagement" | "VueStateManagement"
  question: string
  options: string[]
  correctAnswer: string
}

export const questions: Question[] = [
  // JavaScript Questions
  {
    id: "js1",
    category: "JavaScript",
    question: "let va var o'rtasidagi asosiy farq nima?",
    options: [
      "Ikkalasi bir xil",
      "let block scope ga ega, var function scope",
      "var constdek ishlaydi",
      "let faqat global",
    ],
    correctAnswer: "let block scope ga ega, var function scope",
  },
  {
    id: "js2",
    category: "JavaScript",
    question: "=== operatori nimani bildiradi?",
    options: [
      "Faqat qiymatni taqqoslaydi",
      "Qiymat va tipni taqqoslaydi",
      "Faqat tipni tekshiradi",
      "To'g'ri emas operator",
    ],
    correctAnswer: "Qiymat va tipni taqqoslaydi",
  },
  {
    id: "js3",
    category: "JavaScript",
    question: "NaN nimani bildiradi?",
    options: ["Natural Number", "Not a Number", "No assigned Name", "Null and None"],
    correctAnswer: "Not a Number",
  },
  {
    id: "js4",
    category: "JavaScript",
    question: "typeof null natijasi nima bo'ladi?",
    options: ["null", "object", "undefined", "string"],
    correctAnswer: "object",
  },
  {
    id: "js5",
    category: "JavaScript",
    question: "Array.prototype.map() metodi nima qiladi?",
    options: [
      "Massivni sort qiladi",
      "Har bir elementga amal bajarib, yangi massiv qaytaradi",
      "Massivdan element o'chiradi",
      "Massivni stringga aylantiradi",
    ],
    correctAnswer: "Har bir elementga amal bajarib, yangi massiv qaytaradi",
  },
  {
    id: "js6",
    category: "JavaScript",
    question: "Hoisting qaysi birida mavjud?",
    options: ["var", "let", "const", "function"],
    correctAnswer: "var",
  },
  {
    id: "js7",
    category: "JavaScript",
    question: "Closure nima?",
    options: [
      "Funksiya ichidagi funksiya",
      "Funksiya o'zining scope ini eslab qolishi",
      "Async funksiya",
      "Arrow funksiya",
    ],
    correctAnswer: "Funksiya o'zining scope ini eslab qolishi",
  },
  {
    id: "js8",
    category: "JavaScript",
    question: "Promise ning qaysi holatlari mavjud?",
    options: [
      "pending, resolved, rejected",
      "pending, fulfilled, rejected",
      "waiting, done, error",
      "start, success, fail",
    ],
    correctAnswer: "pending, fulfilled, rejected",
  },
  {
    id: "js9",
    category: "JavaScript",
    question: "async/await nima uchun ishlatiladi?",
    options: [
      "Sinxron kod yozish uchun",
      "Asinxron kodni sinxron ko'rinishda yozish uchun",
      "Funksiyani tezlashtirish uchun",
      "Error handling uchun",
    ],
    correctAnswer: "Asinxron kodni sinxron ko'rinishda yozish uchun",
  },
  {
    id: "js10",
    category: "JavaScript",
    question: "Event delegation nima?",
    options: ["Eventni o'chirish", "Eventni parent elementga berish", "Eventni kechiktirish", "Eventni takrorlash"],
    correctAnswer: "Eventni parent elementga berish",
  },

  // HTML Questions
  {
    id: "html1",
    category: "HTML",
    question: "HTMLda <section> elementi nima uchun ishlatiladi?",
    options: ["Rasm qo'yish uchun", "Semantik blok yaratish uchun", "Script yozish uchun", "Navigatsiya uchun"],
    correctAnswer: "Semantik blok yaratish uchun",
  },
  {
    id: "html2",
    category: "HTML",
    question: '<input type="email"> elementi qanday vazifa bajaradi?',
    options: [" Parol kiritish", "Email manzil kiritish", "Matn kiritish", "Sana tanlash"],
    correctAnswer: "Email manzil kiritish",
  },
  {
    id: "html3",
    category: "HTML",
    question: "HTML faylda <title> elementi nimani bildiradi?",
    options: ["Sahifa sarlavhasi", "Matn paragrafi", "Script kodi", "Rasm nomi"],
    correctAnswer: "Sahifa sarlavhasi",
  },
  {
    id: "html4",
    category: "HTML",
    question: "<header>, <footer>, <nav> kabi elementlar qanday elementlarga kiradi?",
    options: ["Inline elementlar", "Interaktiv elementlar", "Semantik elementlar", "Form elementlari"],
    correctAnswer: "Semantik elementlar",
  },
  {
    id: "html5",
    category: "HTML",
    question: "<img> tegida alt atributi nimaga kerak?",
    options: [
      "Rasm nomi uchun",
      "Rasm ko'rinmasa matn ko'rsatish uchun",
      "Rasm o'lchamini belgilash uchun",
      "Rasm rangini o'zgartirish uchun",
    ],
    correctAnswer: "Rasm ko'rinmasa matn ko'rsatish uchun",
  },
  {
    id: "html6",
    category: "HTML",
    question: "HTML nima?",
    options: [
      "Hyper Trainer Marking Language",
      "Hyper Text Markup Language",
      "Hyper Text Marketing Language",
      "Hyper Transfer Markup Language",
    ],
    correctAnswer: "Hyper Text Markup Language",
  },
  {
    id: "html7",
    category: "HTML",
    question: "HTML fayl qaysi kengaytmada saqlanadi?",
    options: [".htl", ".hml", ".html", ".xml"],
    correctAnswer: ".html",
  },
  {
    id: "html8",
    category: "HTML",
    question: "<a> tegi nimaga xizmat qiladi?",
    options: ["Sarlavha berish uchun", "Havola yaratish uchun", "Rasm joylash uchun", "Formani yuborish uchun"],
    correctAnswer: "Havola yaratish uchun",
  },
  {
    id: "html9",
    category: "HTML",
    question: "Semantik HTML elementi qaysi?",
    options: ["<div>", "<span>", "<section>", "<b>"],
    correctAnswer: "<section>",
  },
  {
    id: "html10",
    category: "HTML",
    question: "Formani yuborish uchun qaysi teg ishlatiladi?",
    options: ["<button>", '<input type="submit">', "<a>", "<div>"],
    correctAnswer: '<input type="submit">',
  },

  // CSS Questions
  {
    id: "css1",
    category: "CSS",
    question: "CSS ning to'liq ochilmasi nima?",
    options: ["Computer Style Sheets", "Creative Style Sheets", "Cascading Style Sheets", "Colorful Style Sheets"],
    correctAnswer: "Cascading Style Sheets",
  },
  {
    id: "css2",
    category: "CSS",
    question: "Elementni yashirish uchun qaysi property ishlatiladi?",
    options: ["hide", "visible: false", "display: none", "visibility: hide"],
    correctAnswer: "display: none",
  },
  {
    id: "css3",
    category: "CSS",
    question: "Flexbox da asosiy yo'nalishni o'zgartirish uchun nima ishlatiladi?",
    options: ["align-items", "flex-direction", "justify-content", "order"],
    correctAnswer: "flex-direction",
  },
  {
    id: "css4",
    category: "CSS",
    question: "Rang berish uchun qaysi format NOTO'G'RI?",
    options: ["#fff", "rgb(0,0,0)", "hsl(0,100%,50%)", "col(white)"],
    correctAnswer: "col(white)",
  },
  {
    id: "css5",
    category: "CSS",
    question: "Box model tarkibiy qismlari:",
    options: [
      "Margin, Border, Padding, Content",
      "Border, Width, Height, Font",
      "Padding, Spacing, Font-size",
      "Width, Height, Text",
    ],
    correctAnswer: "Margin, Border, Padding, Content",
  },
  {
    id: "css6",
    category: "CSS",
    question: "CSS Grid va Flexbox o'rtasidagi farq nima?",
    options: ["Farq yo'q", "Grid 2D, Flexbox 1D", "Grid eski, Flexbox yangi", "Grid faqat rasm uchun"],
    correctAnswer: "Grid 2D, Flexbox 1D",
  },
  {
    id: "css7",
    category: "CSS",
    question: "z-index nima uchun ishlatiladi?",
    options: [
      "Elementni kattalashtirish",
      "Elementni qatlam tartibini belgilash",
      "Elementni markazlashtirish",
      "Elementni aylantirishh",
    ],
    correctAnswer: "Elementni qatlam tartibini belgilash",
  },
  {
    id: "css8",
    category: "CSS",
    question: "CSS da !important nima qiladi?",
    options: [
      "Stilni muhim deb belgilaydi",
      "Stilni yuqori prioritet beradi",
      "Stilni o'chiradi",
      "Stilni takrorlaydi",
    ],
    correctAnswer: "Stilni yuqori prioritet beradi",
  },

  // React Questions
  {
    id: "react1",
    category: "React",
    question: "React nima?",
    options: ["Backend framework", "UI kutubxonasi", "To'liq dasturlash tili", "CSS preprocessori"],
    correctAnswer: "UI kutubxonasi",
  },
  {
    id: "react2",
    category: "React",
    question: "JSX bu...",
    options: ["HTML fayl", "JavaScript funksiyasi", "JavaScript syntax extension", "React component turi"],
    correctAnswer: "JavaScript syntax extension",
  },
  {
    id: "react3",
    category: "React",
    question: "useState nima?",
    options: [
      "Component yaratish usuli",
      "Componentni o'chirish",
      "Reaktiv state yaratish uchun hook",
      "DOM ga murojaat qilish usuli",
    ],
    correctAnswer: "Reaktiv state yaratish uchun hook",
  },
  {
    id: "react4",
    category: "React",
    question: "Props orqali nima uzatiladi?",
    options: ["Davlat", "Ma'lumot va funksiyalar", "React Router", "Redux"],
    correctAnswer: "Ma'lumot va funksiyalar",
  },
  {
    id: "react5",
    category: "React",
    question: "React componentlarining asosiy turlari:",
    options: ["DOM va Virtual DOM", "Function va Class", "useEffect va useState", "Children va Parent"],
    correctAnswer: "Function va Class",
  },
  {
    id: "react6",
    category: "React",
    question: "useEffect hooki nima uchun ishlatiladi?",
    options: ["State yaratish uchun", "Side effect lar uchun", "Component yaratish uchun", "Props uzatish uchun"],
    correctAnswer: "Side effect lar uchun",
  },
  {
    id: "react7",
    category: "React",
    question: "React da key prop nima uchun kerak?",
    options: [
      "Elementni identifikatsiya qilish uchun",
      "Elementni yashirish uchun",
      "Elementni stillashtirish uchun",
      "Elementni o'chirish uchun",
    ],
    correctAnswer: "Elementni identifikatsiya qilish uchun",
  },
  {
    id: "react8",
    category: "React",
    question: "React.memo nima qiladi?",
    options: [
      "Componentni eslab qoladi",
      "Componentni memoization qiladi",
      "Componentni o'chiradi",
      "Componentni yaratadi",
    ],
    correctAnswer: "Componentni memoization qiladi",
  },
  {
    id: "react9",
    category: "React",
    question: "useCallback hooki nima uchun ishlatiladi?",
    options: [
      "State yaratish uchun",
      "Funksiyani memoize qilish uchun",
      "Component yaratish uchun",
      "Effect yaratish uchun",
    ],
    correctAnswer: "Funksiyani memoize qilish uchun",
  },
  {
    id: "react10",
    category: "React",
    question: "React da lifting state up nima?",
    options: ["State ni yuqoriga ko'tarish", "State ni pastga tushirish", "State ni o'chirish", "State ni yaratish"],
    correctAnswer: "State ni yuqoriga ko'tarish",
  },
  {
    id: "react11",
    category: "React",
    question: "React Router nima uchun ishlatiladi?",
    options: [
      "State boshqarish uchun",
      "Sahifalar orasida navigatsiya uchun",
      "API chaqirish uchun",
      "Stil berish uchun",
    ],
    correctAnswer: "Sahifalar orasida navigatsiya uchun",
  },
  {
    id: "react12",
    category: "React",
    question: "React da controlled component nima?",
    options: [
      "React tomonidan boshqariladigan component",
      "Form elementi qiymati state orqali boshqariladigan component",
      "Faqat class component",
      "Faqat function component",
    ],
    correctAnswer: "Form elementi qiymati state orqali boshqariladigan component",
  },

  // Vue.js Questions
  {
    id: "vue1",
    category: "Vue",
    question: "Vue.js nima?",
    options: ["Backend framework", "Progressive JavaScript framework", "CSS kutubxonasi", "Database"],
    correctAnswer: "Progressive JavaScript framework",
  },
  {
    id: "vue2",
    category: "Vue",
    question: "Vue.js da v-model nima qiladi?",
    options: ["Elementni yashiradi", "Two-way data binding yaratadi", "Elementni o'chiradi", "Stil beradi"],
    correctAnswer: "Two-way data binding yaratadi",
  },
  {
    id: "vue3",
    category: "Vue",
    question: "Vue.js da computed property nima?",
    options: ["Oddiy property", "Reaktiv hisoblangan property", "Static property", "CSS property"],
    correctAnswer: "Reaktiv hisoblangan property",
  },
  {
    id: "vue4",
    category: "Vue",
    question: "Vue.js da v-if va v-show o'rtasidagi farq nima?",
    options: ["Farq yo'q", "v-if DOM dan o'chiradi, v-show CSS display bilan yashiradi", "v-if tezroq", "v-show yangi"],
    correctAnswer: "v-if DOM dan o'chiradi, v-show CSS display bilan yashiradi",
  },
  {
    id: "vue5",
    category: "Vue",
    question: "Vue.js da lifecycle hook lari qaysilar?",
    options: [
      "created, mounted, updated, destroyed",
      "start, middle, end",
      "init, render, finish",
      "begin, process, complete",
    ],
    correctAnswer: "created, mounted, updated, destroyed",
  },
  {
    id: "vue6",
    category: "Vue",
    question: "Vue.js da v-for directive nima uchun ishlatiladi?",
    options: [
      "Elementni takrorlash uchun",
      "Elementni o'chirish uchun",
      "Elementni yashirish uchun",
      "Elementni yaratish uchun",
    ],
    correctAnswer: "Elementni takrorlash uchun",
  },
  {
    id: "vue7",
    category: "Vue",
    question: "Vue.js da props nima?",
    options: [
      "Parent componentdan child componentga ma'lumot uzatish usuli",
      "CSS property",
      "JavaScript funksiya",
      "HTML atribut",
    ],
    correctAnswer: "Parent componentdan child componentga ma'lumot uzatish usuli",
  },
  {
    id: "vue8",
    category: "Vue",
    question: "Vue.js da emit nima qiladi?",
    options: [
      "Child componentdan parent componentga event yuboradi",
      "Ma'lumotni o'chiradi",
      "Componentni yaratadi",
      "Stilni o'zgartiradi",
    ],
    correctAnswer: "Child componentdan parent componentga event yuboradi",
  },
  {
    id: "vue9",
    category: "Vue",
    question: "Vue.js da watch nima uchun ishlatiladi?",
    options: [
      "Vaqtni ko'rish uchun",
      "Ma'lumot o'zgarishini kuzatish uchun",
      "Componentni yaratish uchun",
      "Stilni berish uchun",
    ],
    correctAnswer: "Ma'lumot o'zgarishini kuzatish uchun",
  },
  {
    id: "vue10",
    category: "Vue",
    question: "Vue.js da slot nima?",
    options: ["Vaqt oralig'i", "Content distribution mexanizmi", "CSS property", "JavaScript funksiya"],
    correctAnswer: "Content distribution mexanizmi",
  },
  {
    id: "vue11",
    category: "Vue",
    question: "Vue.js da mixins nima?",
    options: [
      "CSS aralashmasi",
      "Component funksionalligini qayta ishlatish usuli",
      "HTML element",
      "JavaScript o'zgaruvchi",
    ],
    correctAnswer: "Component funksionalligini qayta ishlatish usuli",
  },
  {
    id: "vue12",
    category: "Vue",
    question: "Vue Router nima uchun ishlatiladi?",
    options: [
      "Ma'lumot yuborish uchun",
      "Single Page Application da routing uchun",
      "Stil berish uchun",
      "Ma'lumot saqlash uchun",
    ],
    correctAnswer: "Single Page Application da routing uchun",
  },

  // React State Management Questions
  {
    id: "reactstate1",
    category: "ReactStateManagement",
    question: "Redux nima uchun ishlatiladi?",
    options: [
      "CSSni boshqarish uchun",
      "Routing qilish uchun",
      "Application state boshqaruvi uchun",
      "Server bilan ulanish uchun",
    ],
    correctAnswer: "Application state boshqaruvi uchun",
  },
  {
    id: "reactstate2",
    category: "ReactStateManagement",
    question: "Redux da reducer nima qiladi?",
    options: ["Komponentga stil beradi", "Event listener", "Yangi state yaratadi", "Actionlarni avtomatik yuboradi"],
    correctAnswer: "Yangi state yaratadi",
  },
  {
    id: "reactstate3",
    category: "ReactStateManagement",
    question: "Redux toolkit nima?",
    options: [
      "React uchun CSS kutubxona",
      "Reduxni soddalashtirish vositasi",
      "Node.js moduli",
      "React komponent turi",
    ],
    correctAnswer: "Reduxni soddalashtirish vositasi",
  },
  {
    id: "reactstate4",
    category: "ReactStateManagement",
    question: "useReducer hooki nimaga o'xshaydi?",
    options: ["Redux reducerga", "useState ga", "useEffect ga", "Props ga"],
    correctAnswer: "Redux reducerga",
  },
  {
    id: "reactstate5",
    category: "ReactStateManagement",
    question: "Context API ning asosiy vazifasi nima?",
    options: ["Komponentni render qilish", "Props drilling ni oldini olish", "CSS yaratish", "Routing qilish"],
    correctAnswer: "Props drilling ni oldini olish",
  },
  {
    id: "reactstate6",
    category: "ReactStateManagement",
    question: "Redux da action nima?",
    options: ["Funksiya", "State o'zgarishini tasvirlovchi obyekt", "Component", "CSS klass"],
    correctAnswer: "State o'zgarishini tasvirlovchi obyekt",
  },
  {
    id: "reactstate7",
    category: "ReactStateManagement",
    question: "Redux da store nima?",
    options: ["Ma'lumot bazasi", "Application state ni saqlovchi obyekt", "Component", "CSS fayl"],
    correctAnswer: "Application state ni saqlovchi obyekt",
  },
  {
    id: "reactstate8",
    category: "ReactStateManagement",
    question: "Redux da middleware nima uchun ishlatiladi?",
    options: [
      "Stilni berish uchun",
      "Action va reducer orasida qo'shimcha logika uchun",
      "Component yaratish uchun",
      "Ma'lumot saqlash uchun",
    ],
    correctAnswer: "Action va reducer orasida qo'shimcha logika uchun",
  },
  {
    id: "reactstate9",
    category: "ReactStateManagement",
    question: "Zustand nima?",
    options: ["CSS kutubxonasi", "Yengil state management kutubxonasi", "Testing kutubxonasi", "Routing kutubxonasi"],
    correctAnswer: "Yengil state management kutubxonasi",
  },
  {
    id: "reactstate10",
    category: "ReactStateManagement",
    question: "Recoil nima?",
    options: ["React uchun state management kutubxonasi", "CSS framework", "Testing tool", "Build tool"],
    correctAnswer: "React uchun state management kutubxonasi",
  },
  {
    id: "reactstate11",
    category: "ReactStateManagement",
    question: "Redux Thunk nima uchun ishlatiladi?",
    options: ["Sinxron actionlar uchun", "Asinxron actionlar uchun", "CSS uchun", "Routing uchun"],
    correctAnswer: "Asinxron actionlar uchun",
  },
  {
    id: "reactstate12",
    category: "ReactStateManagement",
    question: "Redux Saga nima?",
    options: [
      "CSS kutubxonasi",
      "Side effectlarni boshqarish uchun middleware",
      "Component kutubxonasi",
      "Testing tool",
    ],
    correctAnswer: "Side effectlarni boshqarish uchun middleware",
  },
  {
    id: "reactstate13",
    category: "ReactStateManagement",
    question: "React Query (TanStack Query) nima uchun ishlatiladi?",
    options: ["Local state uchun", "Server state boshqaruvi uchun", "CSS uchun", "Routing uchun"],
    correctAnswer: "Server state boshqaruvi uchun",
  },
  {
    id: "reactstate14",
    category: "ReactStateManagement",
    question: "MobX ning asosiy prinsipi nima?",
    options: ["Immutable state", "Observable state", "Static state", "Global state"],
    correctAnswer: "Observable state",
  },
  {
    id: "reactstate15",
    category: "ReactStateManagement",
    question: "React da useContext hooki nima qiladi?",
    options: ["State yaratadi", "Context qiymatini o'qiydi", "Component yaratadi", "Effect yaratadi"],
    correctAnswer: "Context qiymatini o'qiydi",
  },

  // Vue State Management Questions
  {
    id: "vuestate1",
    category: "VueStateManagement",
    question: "Vuex nima?",
    options: ["React kutubxonasi", "Vue.js uchun state management pattern", "CSS framework", "Testing tool"],
    correctAnswer: "Vue.js uchun state management pattern",
  },
  {
    id: "vuestate2",
    category: "VueStateManagement",
    question: "Vuex da store nima?",
    options: ["Component", "Markaziy state konteyner", "CSS fayl", "HTML element"],
    correctAnswer: "Markaziy state konteyner",
  },
  {
    id: "vuestate3",
    category: "VueStateManagement",
    question: "Vuex da mutation nima qiladi?",
    options: ["State ni o'qiydi", "State ni o'zgartiradi", "Component yaratadi", "API chaqiradi"],
    correctAnswer: "State ni o'zgartiradi",
  },
  {
    id: "vuestate4",
    category: "VueStateManagement",
    question: "Vuex da action nima uchun ishlatiladi?",
    options: ["Sinxron operatsiyalar uchun", "Asinxron operatsiyalar uchun", "CSS uchun", "HTML uchun"],
    correctAnswer: "Asinxron operatsiyalar uchun",
  },
  {
    id: "vuestate5",
    category: "VueStateManagement",
    question: "Vuex da getter nima?",
    options: ["State ni o'zgartiruvchi", "State dan hisoblangan qiymat", "Component", "Method"],
    correctAnswer: "State dan hisoblangan qiymat",
  },
  {
    id: "vuestate6",
    category: "VueStateManagement",
    question: "Pinia nima?",
    options: ["Vue 2 uchun kutubxona", "Vue 3 uchun yangi state management", "CSS framework", "Testing tool"],
    correctAnswer: "Vue 3 uchun yangi state management",
  },
  {
    id: "vuestate7",
    category: "VueStateManagement",
    question: "Pinia da store qanday yaratiladi?",
    options: ["createStore()", "defineStore()", "newStore()", "makeStore()"],
    correctAnswer: "defineStore()",
  },
  {
    id: "vuestate8",
    category: "VueStateManagement",
    question: "Vuex da module nima uchun ishlatiladi?",
    options: [
      "Store ni kichik qismlarga bo'lish uchun",
      "Component yaratish uchun",
      "CSS yozish uchun",
      "API chaqirish uchun",
    ],
    correctAnswer: "Store ni kichik qismlarga bo'lish uchun",
  },
  {
    id: "vuestate9",
    category: "VueStateManagement",
    question: "Vue da provide/inject nima?",
    options: ["HTTP so'rov", "Dependency injection pattern", "CSS property", "HTML atribut"],
    correctAnswer: "Dependency injection pattern",
  },
  {
    id: "vuestate10",
    category: "VueStateManagement",
    question: "Pinia da state ni qanday o'zgartirish kerak?",
    options: ["To'g'ridan-to'g'ri", "Faqat action orqali", "Faqat mutation orqali", "Har qanday usulda"],
    correctAnswer: "To'g'ridan-to'g'ri",
  },
  {
    id: "vuestate11",
    category: "VueStateManagement",
    question: "Vuex da mapState nima qiladi?",
    options: ["State ni o'zgartiradi", "State ni component ga bog'laydi", "State ni o'chiradi", "State yaratadi"],
    correctAnswer: "State ni component ga bog'laydi",
  },
  {
    id: "vuestate12",
    category: "VueStateManagement",
    question: "Vuex da mapActions nima uchun ishlatiladi?",
    options: ["State o'qish uchun", "Action larni component ga bog'lash uchun", "CSS uchun", "HTML uchun"],
    correctAnswer: "Action larni component ga bog'lash uchun",
  },
  {
    id: "vuestate13",
    category: "VueStateManagement",
    question: "Pinia ning Vuex dan afzalligi nima?",
    options: ["Katta hajm", "TypeScript support va soddalik", "Ko'p konfiguratsiya", "Murakkablik"],
    correctAnswer: "TypeScript support va soddalik",
  },
  {
    id: "vuestate14",
    category: "VueStateManagement",
    question: "Vue Composition API da reactive() nima qiladi?",
    options: ["Obyektni reaktiv qiladi", "Obyektni o'chiradi", "Obyektni yaratadi", "Obyektni nusxalaydi"],
    correctAnswer: "Obyektni reaktiv qiladi",
  },
  {
    id: "vuestate15",
    category: "VueStateManagement",
    question: "Vue da ref() va reactive() o'rtasidagi farq nima?",
    options: ["Farq yo'q", "ref primitive lar uchun, reactive obyektlar uchun", "ref tezroq", "reactive yangi"],
    correctAnswer: "ref primitive lar uchun, reactive obyektlar uchun",
  },
]
